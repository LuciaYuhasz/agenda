extends ../../layout

block contenido
  button.btn.btn-secondary#btn-volver(type="button" onclick="history.back()") ← Volver atrás

  // Recibe desde el controlador
  - const id_profesional_preseleccionado = typeof id_profesional !== 'undefined' ? id_profesional : ''
  - const id_especialidad_preseleccionada = typeof id_especialidad !== 'undefined' ? id_especialidad : ''
  - const nombre_especialidad_preseleccionada = typeof nombreEspecialidad !== 'undefined' ? nombreEspecialidad : ''
  - const nombre_profesional_preseleccionado = typeof nombreProfesional !== 'undefined' ? nombreProfesional : ''

  .container

    //if mensajeExito
      .alert.alert-success(role="alert")= mensajeExito

    h1.text-center Reserva tu turno 
   
    form(action="/sacarTurno" method="POST") 

      // Campo oculto para la sucursal seleccionada
      input(type="hidden" name="id_sucursal" id="id_sucursal" value=id_sucursal)
      // Sección de especialidad
      .section-especialidad
        h3 Seleccionar Especialidad
        .row
          .col-md-12
            label(for="especialidad_autocomplete") Especialidad:
            input.form-control(
              type="text" 
              name="especialidad_autocomplete" 
              id="especialidad_autocomplete" 
              placeholder="Buscar especialidad" 
              oninput="buscarEspecialidad()" 
              required
              value=nombre_especialidad_preseleccionada
            )
            input(type="hidden" name="id_especialidad" id="id_especialidad" value=id_especialidad_preseleccionada)

            //input(type="hidden" name="id_especialidad" id="id_especialidad")
            ul#lista_especialidades.list-group(style="display: none") 
              // Lista desplegable de especialidades
        hr

      .section-profesional
        h3 Seleccionar Profesional
        .row
          .col-md-12
            label(for="profesional") Profesional:
            select.form-control(name="profesional" id="profesional" onchange="obtenerHorarios()" required)
              if id_profesional_preseleccionado && nombre_profesional_preseleccionado
                option(value=id_profesional_preseleccionado selected)= nombre_profesional_preseleccionado
              option(value="" disabled)= 'Seleccione un profesional'
            input(type="hidden" name="id_profesional" id="id_profesional" value=id_profesional_preseleccionado)

        hr

      // Sección de horarios
      .section-horario
        h3 Seleccionar Fecha y Horario
        .btn-group
          button.btn.btn-secondary(id="prevWeek" type="button" onclick="cambiarSemana(-7)") Semana Anterior
          button.btn.btn-secondary(id="nextWeek" type="button" onclick="cambiarSemana(7)") Próxima Semana
          <button class="btn btn-secondary" type="button" onclick="cambiarMes(-1)">Mes Anterior</button>
          <button class="btn btn-secondary" type="button" onclick="cambiarMes(1)">Próximo Mes</button>

        table.table#fechaTable
          thead
            tr
              th Fecha
              th Horarios Disponibles
          tbody
        hr

      // Sección de confirmación
      .section-confirmar
        input(type="hidden" name="id_horario" id="id_horario")
        input(type="hidden" name="fecha" id="fecha")
        input(type="hidden" name="horario" id="horario")
        label(for="documento") Subir documento (opcional):
        input.form-control(type="file" name="documento" id="documento" accept="image/*")
        //button.btn.btn-primary(type="submit") Reservar Turno
        button.btn.btn-primary(type="submit" id="btnReservar" disabled) Reservar Turno

    // Mostrar detalles del turno
    
  if mensajeExito && nombreProfesional && nombreEspecialidad && fechaTurno && horarioTurno
    p
      | Turno reservado con:
      | Profesional: #{nombreProfesional}
      | Especialidad: #{nombreEspecialidad}
      | Fecha: #{fechaTurno}
      | Horario: #{horarioTurno}
                  
  // Scripts de frontend
  script.  

    const nombreProfesional = !{JSON.stringify(nombreProfesional)};
    const nombreEspecialidad = !{JSON.stringify(nombreEspecialidad)};
    const fechaTurno = !{JSON.stringify(fechaTurno)};
    const horarioTurno = !{JSON.stringify(horarioTurno)};
    window.addEventListener('DOMContentLoaded', function () {
      alert(`✅ ¡Turno reservado exitosamente!\n
            Profesional: ${nombreProfesional}\n
            Especialidad: ${nombreEspecialidad}\n
            Fecha: ${fechaTurno}\n
            Horario: ${horarioTurno}`);

      window.location.href = '/';
    });

  script.

  
    const especialidades = !{JSON.stringify(especialidades)};
    let inicioSemana = new Date(); // Fecha inicial de la semana actual
    let finSemana = new Date();

    // Ajustar fechas de la semana actual
    inicioSemana.setDate(inicioSemana.getDate() - inicioSemana.getDay() + 1); // Lunes
    finSemana.setDate(inicioSemana.getDate() + 6); // Domingo

    function buscarEspecialidad() {
      const input = document.getElementById('especialidad_autocomplete').value.toLowerCase();
      const lista = document.getElementById('lista_especialidades');
      lista.style.display = input ? 'block' : 'none';
      lista.innerHTML = ''; // Limpiar la lista

      especialidades.forEach(especialidad => {
        if (especialidad.nombre.toLowerCase().includes(input)) {
          const li = document.createElement('li');
          li.classList.add('list-group-item');
          li.textContent = especialidad.nombre;
          li.onclick = () => {
            document.getElementById('especialidad_autocomplete').value = especialidad.nombre;
            document.getElementById('id_especialidad').value = especialidad.id_especialidad;
            lista.style.display = 'none';
            cargarProfesionales();
          };
          lista.appendChild(li);
        }
      });
    }

    async function cargarProfesionales() {
      const id_especialidad = document.getElementById('id_especialidad').value;
      const select = document.getElementById('profesional');
      if (!document.getElementById("id_profesional").value) {
        select.innerHTML = '<option value="" disabled selected>Seleccione un profesional</option>';
      }
      

      if (id_especialidad) {
        try {
          const response = await fetch(`/api/profesionales/${id_especialidad}`);
          if (!response.ok) throw new Error('Error en la respuesta del servidor');
          const profesionales = await response.json();
          profesionales.forEach(prof => {
            const option = document.createElement('option');
            option.value = prof.id_profesional;
            option.textContent = prof.nombre;
            select.appendChild(option);
          });
          // ✅ Agregar el `eventListener` después de cargar las opciones
            select.addEventListener("change", function() {
                document.getElementById("id_profesional").value = this.value; // Guardar el ID del profesional
            });
        } catch (error) {
          console.error('Error al cargar profesionales:', error);
        }
      }

      inicioSemana = new Date(); // Lunes de la semana actual
      finSemana = new Date(inicioSemana);
      finSemana.setDate(finSemana.getDate() + 6); // Domingo de la misma semana
      obtenerHorarios(); // Llamar para mostrar horarios actualizados
    }



    async function obtenerHorarios() {
      const idProfesional = document.getElementById('profesional').value;
      const idEspecialidad = document.getElementById('id_especialidad').value;
      const fechaTable = document.getElementById('fechaTable').querySelector('tbody');

      if (idProfesional && idEspecialidad) {
        try {
            // Enviar la fecha de inicio de la semana o mes
            const fechaInicioString = inicioSemana.toISOString().split('T')[0];  // Formato YYYY-MM-DD
            const response = await fetch(`/obtenerHorarios/${idProfesional}/${idEspecialidad}/${fechaInicioString}`);
            const horarios = await response.json();

            console.log("Datos recibidos:", horarios);

            fechaTable.innerHTML = '';  // Limpiar la tabla antes de rellenarla

            // Aquí agrupamos y mostramos los horarios
            Object.keys(horarios).forEach(fecha => {
                const tr = document.createElement('tr');

                // Celda con la fecha
                const tdFecha = document.createElement('td');
                tdFecha.textContent = formatearFecha(fecha);
                tr.appendChild(tdFecha);

                // Celda con los horarios
                const tdHorarios = document.createElement('td');
                horarios[fecha].forEach(horario => {
                    const btnHorario = document.createElement('button');
                    btnHorario.setAttribute('type', 'button');
                    btnHorario.classList.add('btn', 'btn-light', 'm-1');
                    btnHorario.textContent = `${horario.hora_inicio} - ${horario.hora_fin}`;
                    console.log(horario)
                    btnHorario.onclick = () => {
                        document.getElementById('horario').value = horario.hora_inicio;
                        
                         // ✅ Formatea la fecha antes de asignarla al campo del formulario
                        //document.getElementById('fecha').value = new Date(horario.fecha).toISOString().split('T')[0]; 
                        document.getElementById('fecha').value = horario.fecha;
                        

                        document.getElementById('id_horario').value = horario.id_horarios;
                        document.getElementById('btnReservar').disabled = false;
                        console.log("Valores asignados en el frontend:");
                        console.log("id_horario:", horario.id_horarios);
                        console.log("fecha:", horario.fecha);
                        console.log("horario:", horario.hora_inicio);
                    };

                    tdHorarios.appendChild(btnHorario);
                });
                tr.appendChild(tdHorarios);
                fechaTable.appendChild(tr);
            });

          } catch (error) {
              console.error('Error al obtener horarios disponibles:', error);
            }
        }
    }

    // Función para cambiar la semana o el mes
    function cambiarSemana(dias) {
      inicioSemana.setDate(inicioSemana.getDate() + dias);  // Ajustamos la fecha de inicio de la semana
      finSemana.setDate(finSemana.getDate() + dias);  // Ajustamos la fecha de fin de la semana
      document.getElementById('btnReservar').disabled = true;
      obtenerHorarios();  // Llamamos para mostrar los horarios actualizados
    }

    function cambiarMes(meses) {
      inicioSemana.setMonth(inicioSemana.getMonth() + meses);  // Cambiamos al mes anterior o siguiente
      finSemana.setMonth(finSemana.getMonth() + meses);  // Cambiamos el fin del mes
      document.getElementById('btnReservar').disabled = true;
      obtenerHorarios();  // Llamamos para mostrar los horarios actualizados
    }

    
    
    function formatearFecha(fechaISO) {
        // Supone que fechaISO viene como 'YYYY-MM-DD'
      const [anio, mes, dia] = fechaISO.split('-');
      return `${dia}/${mes}/${anio}`;
    }



   // ✅ Log para debug antes del submit
     document.addEventListener("DOMContentLoaded", () => {
      document.querySelector("form").addEventListener("submit", (e) => {
        console.log("🧾 Enviando datos:");
        console.log("id_horario:", document.getElementById("id_horario").value);
        console.log("fecha:", document.getElementById("fecha").value);
        console.log("horario:", document.getElementById("horario").value);
      });
    });









      document.addEventListener("DOMContentLoaded", async () => {
        const idEspecialidad = document.getElementById("id_especialidad").value;
        const idProfesional = document.getElementById("id_profesional").value;

        if (idEspecialidad) {
          await cargarProfesionales(); // Carga profesionales de la especialidad

          if (idProfesional) {
            // Preselecciona automáticamente el profesional en el dropdown
            const selectProfesional = document.getElementById("profesional");
            selectProfesional.value = idProfesional;
            document.getElementById("id_profesional").value = idProfesional;
            obtenerHorarios(); // Carga horarios automáticamente
          }
        }
      });

    




